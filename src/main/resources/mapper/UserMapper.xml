<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.swm.vnb.dao.UserDAO">
    <select id="getUserById" parameterType="int" resultType="UserVO">
        SELECT u.user_id, u.type_id, u.email, u.password, u.authority, u.nickname,
               IFNULL(SUM(f.size) / 1000000, 0) AS total_memory_usage, u.avatar, u.social_type, u.created_at, u.updated_at
        FROM user u
        LEFT JOIN file f ON u.user_id = f.user_id
        WHERE u.user_id = #{id}
    </select>
    <select id="getUserByEmail" parameterType="String" resultType="UserVO">
        SELECT u.user_id, u.type_id, u.email, u.password, u.authority, u.nickname,
               IFNULL(SUM(f.size) / 1000000, 0) AS total_memory_usage, u.avatar, u.social_type, u.created_at, u.updated_at
        FROM user u
        LEFT JOIN file f ON u.user_id = f.user_id
        WHERE u.email = #{email}
    </select>
    <select id="getUserIdByEmail" parameterType="String" resultType="Integer">
        SELECT user_id
        FROM user
        WHERE email = #{email}
    </select>
    <select id="getUserTypes" resultType="UserTypeVO">
        SELECT type_id, type_name, created_at, updated_at
        FROM user_type
    </select>

    <insert id="createUser" parameterType="UserVO" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user
            (type_id, email, password, authority, nickname, avatar, social_type)
        VALUES
            (#{typeId}, #{email}, #{password}, #{authority}, #{nickname}, #{avatar}, #{socialType})
    </insert>

    <update id="updateUser" parameterType="UserVO">
        UPDATE user
        <set>
            <if test="typeId != null">type_id = #{typeId},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="socialType != null and socialType != ''">social_type = #{socialType}</if>
        </set>
        WHERE user_id = #{userId}
    </update>

    <delete id="deleteUser" parameterType="int">
        DELETE FROM user
        WHERE user_id = #{userId}
    </delete>
</mapper>
