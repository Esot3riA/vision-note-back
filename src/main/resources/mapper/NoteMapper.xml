<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.swm.vnb.dao.NoteDAO">
    <select id="getNoteFiles" parameterType="HashMap" resultType="NoteFileVO">
        SELECT nf.file_id, nf.folder_id, nf.script_id, sc.category_name,
            nf.file_name, nf.is_important, nf.created_at, nf.updated_at
        FROM note_file nf
        INNER JOIN script_category sc ON nf.category_id = sc.category_id
        WHERE
            folder_id = #{folderId}
            AND nf.user_id = #{userId}
    </select>

    <select id="getNoteFolders" parameterType="HashMap" resultType="NoteFolderVO">
        SELECT folder_id, parent_folder_id, folder_name, created_at, updated_at
        FROM note_folder
        WHERE
            parent_folder_id = #{folderId}
            AND user_id = #{userId}
    </select>

    <select id="getNoteFolder" parameterType="HashMap" resultType="NoteFolderVO">
        SELECT folder_id, parent_folder_id, folder_name, created_at, updated_at
        FROM note_folder
        WHERE
            folder_id = #{folderId}
            AND user_id = #{userId}
    </select>

    <select id="getRootFolderId" parameterType="int" resultType="int">
        SELECT folder_id
        FROM note_folder
        WHERE
            user_id = #{userId}
            AND parent_folder_id IS NULL
    </select>

    <select id="getScriptIdByFileId" parameterType="HashMap" resultType="int">
        SELECT script_id
        FROM note_file
        WHERE
            file_id = #{fileId}
            AND user_id = #{userId}
    </select>

    <select id="searchNotes" parameterType="HashMap" resultType="HashMap">
        SELECT s.script_id AS scriptId, nfl.file_name,
            sp.paragraph_content AS paragraphContent, nfo.folder_name AS folderName
        FROM script s
        INNER JOIN script_paragraph sp ON s.script_id = sp.script_id
        INNER JOIN note_file nfl ON s.script_id = nfl.script_id
        INNER JOIN note_folder nfo ON nfl.folder_id = nfo.folder_id
        WHERE
            s.user_id = #{userId}
            AND sp.paragraph_content LIKE CONCAT('%', #{keyword}, '%')
        GROUP BY s.script_id
    </select>

    <insert id="createNoteFile" parameterType="NoteFileVO" useGeneratedKeys="true" keyProperty="fileId">
        INSERT INTO note_file
            (user_id, folder_id, script_id, category_id, file_name, is_important)
        VALUES
            (#{userId}, #{folderId}, #{scriptId}, #{categoryId}, #{fileName}, #{isImportant})
    </insert>

    <update id="updateNoteFile" parameterType="NoteFileVO">
        UPDATE note_file
        <set>
            <if test="fileName != null and fileName != ''">file_name = #{fileName},</if>
            <if test="isImportant != null">is_important = #{isImportant}</if>
        </set>
        WHERE
            file_id = #{fileId}
            AND user_id = #{userId}
    </update>

    <update id="moveNoteFile" parameterType="HashMap">
        UPDATE note_file
        SET folder_id = #{folderId}
        WHERE
            file_id = #{fileId}
            AND user_id = #{userId}
    </update>

    <delete id="deleteNoteFile" parameterType="HashMap">
        DELETE FROM note_file
        WHERE
            file_id = #{fileId}
            AND user_id = #{userId}
    </delete>

    <delete id="deleteNoteFilesByUserId" parameterType="int">
        DELETE FROM note_file
        WHERE user_id = #{userId}
    </delete>


    <insert id="createNoteFolder" parameterType="NoteFolderVO" useGeneratedKeys="true" keyProperty="folderId">
        INSERT INTO note_folder
            (user_id, parent_folder_id, folder_name)
        VALUES
            (#{userId}, #{parentFolderId}, #{folderName})
    </insert>

    <update id="updateNoteFolder" parameterType="NoteFolderVO">
        UPDATE note_folder
        <set>
            <if test="folderName != null and folderName != ''">folder_name = #{folderName},</if>
        </set>
        WHERE
            folder_id = #{folderId}
            AND user_id = #{userId}
    </update>

    <update id="moveNoteFolder" parameterType="HashMap">
        UPDATE note_folder
        SET parent_folder_id = #{parentFolderId}
        WHERE
            folder_id = #{folderId}
            AND user_id = #{userId}
    </update>

    <delete id="deleteNoteFolder" parameterType="HashMap">
        DELETE FROM note_folder
        WHERE
            folder_id = #{folderId}
            AND user_id = #{userId}
    </delete>

    <delete id="deleteNoteFoldersByUserId" parameterType="int">
        DELETE FROM note_folder
        WHERE user_id = #{userId}
    </delete>

    <update id="renewNoteFolder" parameterType="HashMap">
        UPDATE note_folder
        SET updated_at = NOW()
        WHERE
            folder_id = #{folderId}
            AND user_id = #{userId}
    </update>

</mapper>
